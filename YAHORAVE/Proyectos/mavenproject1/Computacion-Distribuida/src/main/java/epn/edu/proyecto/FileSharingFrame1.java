/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package epn.edu.proyecto;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;

/**
 *
 * @author santi
 */
public class FileSharingFrame1 extends javax.swing.JFrame implements IFilesManager{

    private String rutaCarpetaCompartida;
    private JFileChooser jChooser;
    DefaultListModel<String> modelList = new DefaultListModel<>();
    private Integer puertoLocal = 8888;
    private List<ClientPeer> lstClientes = new ArrayList<>();
    private Integer[] puertosServicio = new Integer[]{9990, 9991, 9992, 9993, 9994, 9995, 9996, 9997, 9998, 9999};

    /**
     * Creates new form FileSharingFrame
     */
    public FileSharingFrame1() {
        initComponents();
        jlsArchivos.setModel(modelList);
        ServerPeer server = new ServerPeer(puertoLocal,this);
        server.start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        conectar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlsArchivos = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        subirArchivo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        conectar.setText("Conectar");
        conectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conectarActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jlsArchivos);

        jLabel1.setText("Archivos");

        subirArchivo.setText("Subir Archivo");
        subirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subirArchivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(conectar)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(subirArchivo)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(conectar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(subirArchivo)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void conectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conectarActionPerformed

//        chooser = new JFileChooser();
        //        chooser.setDialogTitle("Seleccionar Carpeta");
        //        chooser.setAcceptAllFileFilterUsed(false);
        //        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {            
        //            rutaCarpetaCompartida=chooser.getSelectedFile().toString();
        //            File[] files=chooser.getSelectedFile().listFiles();
        //            for(File file:files){
        //                
        //            }
        //        }
        File archivoPuertos = new File("C:\\peerPorts.txt");
        ClientPeer cliente;
        try (BufferedReader br = new BufferedReader(new FileReader(archivoPuertos))) {
            String line;
            while ((line = br.readLine()) != null) {
                Integer puertoCliente = Integer.parseInt(line);
                if (!puertoCliente.equals(puertoLocal)) {
                    cliente = new ClientPeer(puertoCliente, puertoLocal);
                    cliente.start();
                    lstClientes.add(cliente);
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FileSharingFrame1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FileSharingFrame1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_conectarActionPerformed

    private void subirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subirArchivoActionPerformed
        jChooser = new JFileChooser();
        jChooser.setDialogTitle("Seleccionar Carpeta");

        if (jChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            for (ClientPeer cliente : lstClientes) {
                
                try {
                    cliente.uploadFile(jChooser.getSelectedFile());
                } catch (IOException ex) {
                    Logger.getLogger(FileSharingFrame1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }


            
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_subirArchivoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileSharingFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileSharingFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileSharingFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileSharingFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileSharingFrame1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton conectar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> jlsArchivos;
    private javax.swing.JButton subirArchivo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateFileAdded(File file) {
        modelList.addElement(file.getName());
    }
}
